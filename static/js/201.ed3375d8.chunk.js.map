{"version":3,"file":"static/js/201.ed3375d8.chunk.js","mappings":"ySAEaA,EAAoBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BAC9B,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAGvBC,EAAQN,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,yFACnB,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,KAAK,IACjB,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAK7BK,EAAOV,EAAAA,GAAAA,GAASW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,uDAKhBU,EAAOZ,EAAAA,GAAAA,GAASa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,uHAKhB,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,KAAK,I,SCnBvB,SAASK,EAAYC,GAAc,IAAXC,EAAMD,EAANC,OACrC,OACEC,EAAAA,EAAAA,MAAClB,EAAiB,CAAAmB,SAAA,EAChBC,EAAAA,EAAAA,KAACb,EAAK,CAAAY,SAAC,oBACPC,EAAAA,EAAAA,KAACT,EAAI,CAAAQ,SACFF,EAAOI,KAAI,SAAAC,GAAK,OACfF,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,EAAMI,IAAKP,UAC9BC,EAAAA,EAAAA,KAACP,EAAI,CAAAM,SAAEG,EAAMK,WAFRL,EAAMI,GAIV,QAKf,CCZe,SAASE,IACtB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCZ,EAAMc,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8BR,EAAAA,EAAAA,WAAS,GAAMS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GA2B1B,OAzBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAA3B,GAAA4B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGI,OAHJF,EAAAC,KAAA,EAEdb,GAAa,GACbI,GAAW,GAAOQ,EAAAE,KAAA,GAEKC,EAAAA,EAAAA,MAAyB,KAAD,EAAzCL,EAAQE,EAAAI,KAGW,KAFnBL,EAAYD,EAASO,KAAKC,SAElBC,OACZC,EAAAA,GAAAA,MAAY,8BAEZxB,GAASyB,EAAAA,EAAAA,GAAKV,IACfC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEDQ,EAAAA,GAAAA,MAAY,uDACZhB,GAAW,GAAM,QAEG,OAFHQ,EAAAC,KAAA,GAEjBb,GAAa,GAAOY,EAAAW,OAAA,6BAAAX,EAAAY,OAAA,GAAAf,EAAA,yBAEvB,kBAnBc,OAAA9B,EAAA8C,MAAA,KAAAC,UAAA,KAqBfpB,GACF,GAAG,KAGDzB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGqB,IAAWpB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,8CAChBF,EAAOuC,OAAS,IAAKpC,EAAAA,EAAAA,KAACL,EAAY,CAACE,OAAQA,IAC3CmB,IAAahB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAW,MAGhC,C","sources":["components/TrendingList/TrendingList.styled.js","components/TrendingList/TrendingList.js","pages/HomePage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TrendingContainer = styled.div`\n  padding: ${p => p.theme.spacing(3)};\n`;\n\nexport const Title = styled.h2`\n  color: ${p => p.theme.colors.green};\n  margin-bottom: ${p => p.theme.spacing(4)};\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Item = styled.h3`\n  font-size: 24px;\n  font-style: italic;\n  text-decoration: underline;\n  &:hover {\n    color: ${p => p.theme.colors.green};\n  }\n`;\n","// TrendingList.jsx\nimport { Link } from 'react-router-dom';\nimport { Item, List, Title, TrendingContainer } from './TrendingList.styled';\n\nexport default function TrendingList({ movies }) {\n  return (\n    <TrendingContainer>\n      <Title>Trending today</Title>\n      <List>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n              <Item>{movie.title}</Item>\n            </Link>\n          </li>\n        ))}\n      </List>\n    </TrendingContainer>\n  );\n}\n","// HomePage.jsx\nimport { toast } from 'react-hot-toast';\nimport { useState, useEffect } from 'react';\nimport { apiFetchTrendingMovies } from 'api';\nimport { MovieLoader } from 'components/Loader/Loader';\nimport TrendingList from 'components/TrendingList/TrendingList';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        setIsError(false);\n\n        const response = await apiFetchTrendingMovies();\n        const newMovies = response.data.results;\n\n        if (newMovies.length === 0) {\n          toast.error('No movies for your request');\n        } else {\n          setMovies([...newMovies]);\n        }\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Try reloading the page!');\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {isError && <div>Unable to fetch movies. Please try again.</div>}\n      {movies.length > 0 && <TrendingList movies={movies} />}\n      {isLoading && <MovieLoader />}\n    </div>\n  );\n}\n"],"names":["TrendingContainer","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","Title","_templateObject2","colors","green","List","_templateObject3","Item","_templateObject4","TrendingList","_ref","movies","_jsxs","children","_jsx","map","movie","Link","to","concat","id","title","HomePage","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","response","newMovies","_context","prev","next","apiFetchTrendingMovies","sent","data","results","length","toast","_toConsumableArray","t0","finish","stop","apply","arguments","MovieLoader"],"sourceRoot":""}